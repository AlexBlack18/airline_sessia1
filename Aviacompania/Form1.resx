<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>